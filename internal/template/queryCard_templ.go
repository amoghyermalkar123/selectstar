// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.731
package template

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var onceHandle = templ.NewOnceHandle()

func Card(queries []string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex flex-1 flex-row flex-wrap\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, query := range queries {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form hx-delete=\"/delete\" hx-include=\"[name=&#39;test&#39;]\"><div class=\"card\"><header class=\"card-header\"><p class=\"card-header-title\">Query Name</p><button type=\"submit\" class=\"btn-close\" name=\"query\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(query)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/template/queryCard.templ`, Line: 12, Col: 72}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></button></header><div class=\"card-content\"><div class=\"content\"><br><time datetime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time></div></div><footer class=\"card-footer\"><a href=\"#\" class=\"card-footer-item\">Save</a> <a href=\"#\" class=\"card-footer-item\">Edit</a> <a href=\"#\" class=\"card-footer-item\">Delete</a></footer></div></form>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"modal\" id=\"mymodal\"><div class=\"modal-background\"></div><div class=\"modal-card\"><header class=\"modal-card-head\"><p class=\"modal-card-title\">Modal title</p><button class=\"delete\" aria-label=\"close\" onclick=\"hideModal()\"></button></header><section class=\"modal-card-body\" id=\"modalbody\"><!-- Content ... --></section><footer class=\"modal-card-foot\"><div class=\"buttons\"><button class=\"button is-success\">Save changes</button> <button class=\"button\" onclick=\"hideModal()\">Cancel</button></div></footer></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script>\n  var format = window.sqlFormatter.format;\n  document.querySelectorAll(\"#sqlArea\").forEach((query) => {\n    if (query.innerHTML.length > 250) {\n      query.innerHTML = query.innerHTML.slice(0, query.innerHTML.length / 32) + \" ...\"\n      console.log(query.innerHTML.slice(0, 10))\n    }\n  });\n  function toggleModal(event) {\n    console.log(\"event:\", event)\n    var element = document.getElementById(\"mymodal\");\n    element.classList.add(\"is-active\");\n  }\n  function hideModal() {\n    var element = document.getElementById(\"mymodal\");\n    element.classList.remove(\"is-active\");\n  }\n\n</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = onceHandle.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
